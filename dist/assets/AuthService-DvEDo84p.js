(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))r(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&r(s)}).observe(document,{childList:!0,subtree:!0});function t(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerPolicy&&(n.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?n.credentials="include":o.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(o){if(o.ep)return;o.ep=!0;const n=t(o);fetch(o.href,n)}})();class c{constructor(){window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1"?this.baseURL="/api":this.baseURL="https://sailingloc.onrender.com/api",this.authEndpoint=`${this.baseURL}/auth`,this.isLoggingOut=!1}async register(e){try{const t=await fetch(`${this.authEndpoint}/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});console.log("üì° R√©ponse HTTP:",{status:t.status,statusText:t.statusText,ok:t.ok,url:t.url});let r;try{r=await t.json(),console.log("üìä Donn√©es JSON re√ßues:",r)}catch(o){console.error("‚ùå Erreur parsing JSON:",o);const n=await t.text();throw console.log("üìÑ R√©ponse texte:",n),new Error(`R√©ponse invalide du serveur: ${t.status}`)}if(!t.ok)throw console.error("‚ùå R√©ponse HTTP non-OK:",t.status,r),new Error(r.message||"Erreur lors de l'inscription");return r}catch(t){throw console.error("‚ùå Erreur AuthService.register:",t),t}}async login(e,t){try{const r=`${this.authEndpoint}/login`;console.log("üîê AuthService.login appel√©"),console.log("üìç URL:",r),console.log("üìä Donn√©es:",{email:e,password:t?"***":"vide"});const o=await fetch(r,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})});console.log("üì° R√©ponse HTTP:",{status:o.status,statusText:o.statusText,ok:o.ok,url:o.url});let n;try{n=await o.json(),console.log("üìä Donn√©es JSON re√ßues:",n)}catch(s){console.error("‚ùå Erreur parsing JSON:",s);const i=await o.text();throw console.log("üìÑ R√©ponse texte:",i),new Error(`R√©ponse invalide du serveur: ${o.status}`)}if(!o.ok)throw console.error("‚ùå R√©ponse HTTP non-OK:",o.status,n),new Error(n.message||"Erreur lors de la connexion");return n}catch(r){throw console.error("‚ùå Erreur AuthService.login:",r),r}}async logout(){try{if(this.isLoggingOut)return console.log("üö™ AuthService.logout - D√©connexion d√©j√† en cours"),{success:!0,message:"D√©connexion en cours"};this.isLoggingOut=!0;const e=this.getAuthToken();if(!e||this.isTokenExpired(e))return console.log("üö™ AuthService.logout - Token expir√©, d√©connexion locale"),this.clearAuthData(),this.isLoggingOut=!1,{success:!0,message:"D√©connexion locale"};const t=`${this.authEndpoint}/logout`;console.log("üö™ AuthService.logout appel√©"),console.log("üìç URL:",t);const r=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}});let o;try{o=await r.json()}catch{o={success:r.ok}}if(!r.ok)throw new Error(o.message||"Erreur lors de la d√©connexion");return this.clearAuthData(),this.isLoggingOut=!1,o}catch(e){throw console.error("Erreur lors de la d√©connexion:",e),this.clearAuthData(),this.isLoggingOut=!1,e}}async getProfile(){try{const e=this.getAuthToken();if(!e)throw new Error("Token d'authentification manquant");const t=await fetch(`${this.authEndpoint}/profile`,{method:"GET",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}}),r=await t.json();if(!t.ok)throw new Error(r.message||"Erreur lors de la r√©cup√©ration du profil");return r}catch(e){throw console.error("Erreur lors de la r√©cup√©ration du profil:",e),e}}async updateProfile(e){try{const t=this.getAuthToken();if(!t)throw new Error("Token d'authentification manquant");const r=await fetch(`${this.authEndpoint}/profile`,{method:"PUT",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},body:JSON.stringify(e)}),o=await r.json();if(!r.ok)throw new Error(o.message||"Erreur lors de la mise √† jour du profil");return o}catch(t){throw console.error("Erreur lors de la mise √† jour du profil:",t),t}}async changePassword(e,t){try{const r=this.getAuthToken();if(!r)throw new Error("Token d'authentification manquant");const o=await fetch(`${this.authEndpoint}/change-password`,{method:"POST",headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"},body:JSON.stringify({currentPassword:e,newPassword:t})}),n=await o.json();if(!o.ok)throw new Error(n.message||"Erreur lors du changement de mot de passe");return n}catch(r){throw console.error("Erreur lors du changement de mot de passe:",r),r}}async verifyToken(){try{const e=this.getAuthToken();if(!e)throw new Error("Aucun token trouv√©");const t=await fetch(`${this.authEndpoint}/verify-token`,{method:"GET",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}}),r=await t.json();if(!t.ok)throw new Error(r.message||"Token invalide");return r}catch(e){throw console.error("Erreur lors de la v√©rification du token:",e),e}}getAuthToken(){try{return localStorage.getItem("sailingloc_token")}catch(e){return console.error("Erreur lors de la r√©cup√©ration du token:",e),null}}isAuthenticated(){const e=this.getAuthToken();if(!e)return!1;try{const t=JSON.parse(atob(e.split(".")[1])),r=Date.now()/1e3;return t.exp>r}catch(t){return console.error("Token invalide:",t),!1}}getCurrentUser(){try{const e=localStorage.getItem("sailingloc_user");return e?JSON.parse(e):null}catch(e){return console.error("Erreur lors de la r√©cup√©ration des donn√©es utilisateur:",e),null}}clearAuthData(){try{localStorage.removeItem("sailingloc_token"),localStorage.removeItem("sailingloc_user")}catch(e){console.error("Erreur lors du nettoyage des donn√©es d'authentification:",e)}}handleAuthError(e){return(e.message.includes("Token")||e.message.includes("401"))&&this.clearAuthData(),{success:!1,message:e.message||"Erreur d'authentification",error:e}}async refreshToken(){try{const e=this.getAuthToken();if(!e)throw new Error("Aucun token √† rafra√Æchir");const t=await fetch(`${this.authEndpoint}/refresh-token`,{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}}),r=await t.json();if(!t.ok)throw new Error(r.message||"Erreur lors du rafra√Æchissement du token");return r.data&&r.data.token&&localStorage.setItem("sailingloc_token",r.data.token),r}catch(e){throw console.error("Erreur lors du rafra√Æchissement du token:",e),this.clearAuthData(),e}}async authenticatedFetch(e,t={}){const r=this.getAuthToken();if(!r)throw new Error("Authentification requise");const o={...t,headers:{...t.headers,Authorization:`Bearer ${r}`,"Content-Type":"application/json"}};try{const n=await fetch(e,o);if(n.status===401)try{await this.refreshToken();const s=this.getAuthToken();return o.headers.Authorization=`Bearer ${s}`,await fetch(e,o)}catch{throw this.clearAuthData(),new Error("Session expir√©e, veuillez vous reconnecter")}return n}catch(n){throw console.error("Erreur lors de la requ√™te authentifi√©e:",n),n}}}export{c as A};
